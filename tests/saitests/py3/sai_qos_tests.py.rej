diff a/tests/saitests/py3/sai_qos_tests.py b/tests/saitests/py3/sai_qos_tests.py	(rejected hunks)
@@ -2126,10 +2126,14 @@ class PFCXonTest(sai_base_test.ThriftInterfaceDataPlane):
         is_multi_asic = (self.clients['src'] != self.clients['dst'])
         # generate pkts_num_egr_mem in runtime
         if 'cisco-8000' in asic_type and src_dst_asic_diff:
-            self.sai_thrift_port_tx_disable(self.dst_client, asic_type, [dst_port_id])
-            pkts_num_egr_mem, extra_bytes_occupied = overflow_egress(self, src_port_id, pkt,
-                                                    int(self.test_params['pg']), asic_type)
-            self.sai_thrift_port_tx_enable(self.dst_client, asic_type, [dst_port_id])
+            self.sai_thrift_port_tx_disable(self.dst_client, asic_type, [dst_port_id, dst_port_2_id, dst_port_3_id])
+            pkts_num_egr_mem1, extra_bytes_occupied1 = overflow_egress(
+                self, src_port_id, pkt, int(self.test_params['pg']), asic_type)
+            pkts_num_egr_mem2, extra_bytes_occupied2 = overflow_egress(
+                self, src_port_id, pkt2, int(self.test_params['pg']), asic_type)
+            pkts_num_egr_mem3, extra_bytes_occupied3 = overflow_egress(
+                self, src_port_id, pkt3, int(self.test_params['pg']), asic_type)
+            self.sai_thrift_port_tx_enable(self.dst_client, asic_type, [dst_port_id, dst_port_2_id, dst_port_3_id])
             time.sleep(2)

         step_id = 1
